<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd
	">

    <!-- 启用注解 -->
    <context:annotation-config />

    <!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
    <context:component-scan base-package="com.gz">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>





    <!-- 数据库参数配置 -->

    <!--
    <bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="initialSize" value="3" />
        <property name="minIdle" value="3" />
        <property name="maxActive" value="20" />
        <property name="maxWait" value="60000" />
        <property name="filters" value="stat,wall" />
    </bean>
    -->

    <!-- 数据库参数配置 -->
    <bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
        <property name="url" value="jdbc:sqlserver://10.0.0.5:36368;DatabaseName=cr_v11_erp" />
        <property name="username" value="sa" />
        <!-- <property name="password" value="${db.password2}" /> -->
        <property name="password" value="PVMXN6EtKiRHtagF45OHAEiLkKRMTfkka5DDBIAFmyI2d/I7Q6Iny9c9NEZOt0vvpm7IsBFBkLcBw27hCEHJgA==" />
        <property name="initialSize" value="3" />
        <property name="minIdle" value="3" /><!-- 空余数量 -->
        <property name="maxActive" value="20" /><!-- 最大连接数 -->
        <property name="maxWait" value="60000" /><!-- 超时等待时间 -->
        <!-- <property name="filters" value="stat,wall"/>  -->
        <property name="filters" value="stat,wall,config" />
        <property name="connectionProperties" value="config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMkF3GLYtMfSMXYBh0pWwNLnRziBdLbgVQi5GaimzfsionuUhzsRp56zdone9P3HYN4jvkWQqi0omWpogsW5rSsCAwEAAQ==" />
    </bean>



    <bean id="dynamicDataSource" class="com.gz.util.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <!-- 指定lookupKey和与之对应的数据源 -->
                <!--
                <entry key="mysql" value-ref="dataSource1"></entry>
                -->
                <entry key="sqlserver" value-ref="dataSource2"></entry>

            </map>
        </property>
        <!-- 这里可以指定默认的数据源 -->
        <property name="defaultTargetDataSource" ref="dataSource2" />
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource" />
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:mybatis/*/*.xml" />
        <!-- 插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource"></property>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="save*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
        </tx:attributes>
    </tx:advice>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 事物处理 -->
    <aop:config>
        <aop:pointcut id="pc" expression="execution(* com.gz.service..*(..))" />
        <aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
    </aop:config>

    <!-- 配置mybatis -->
    <!--
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>

        <property name="mapperLocations" value="classpath:mybatis/*/*.xml" />
    </bean>
           -->


    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>

    <!-- ================ Shiro start ================ -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="ShiroRealm" />
    </bean>

    <!-- 項目自定义的Realm -->
    <bean id="ShiroRealm" class="com.gz.interceptor.shiro.ShiroRealm" ></bean>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />

        <property name="loginUrl" value="/" />

        <property name="successUrl" value="/main/index" />

        <property name="unauthorizedUrl" value="/login_toLogin" />

        <property name="filterChainDefinitions">
            <value>
                /static/login/** 			= anon
                /static/js/myjs/** 			= authc
                /static/js/** 				= anon
                /uploadFiles/uploadImgs/** 	= anon
                /code.do 					= anon
                /login_login	 			= anon
                /app**/** 					= anon
                /weixin/** 					= anon
                /**							= authc
            </value>
        </property>
    </bean>
    <!-- ================ Shiro end ================ -->


</beans>
